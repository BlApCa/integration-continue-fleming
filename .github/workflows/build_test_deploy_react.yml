name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.x'

      - name: Install Frontend Deps
        working-directory: ./client
        run: npm ci

      - name: Run Frontend Unit Tests + Coverage
        working-directory: ./client
        run: npm run test:coverage

      - name: Upload Frontend Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: frontend

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Backend Deps
        working-directory: ./server
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run Backend Unit Tests
        working-directory: ./server
        run: pytest --cov=. --cov-report=xml

      - name: Upload Backend Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./server/coverage.xml
          flags: backend

  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.x'

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Deps
        run: |
          pip install -r server/requirements.txt
          npm --prefix client ci

      - name: Run Cypress E2E Tests
        uses: cypress-io/github-action@v6
        with:
          start: |
            uvicorn server.server:app --host 0.0.0.0 --port 8000 &
            npm --prefix client start
          wait-on: 'http://localhost:3000 http://localhost:8000'

  deploy-frontend:
    needs: [test, e2e]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21.x'

      - name: Install and Build Frontend
        working-directory: ./client
        run: |
          npm ci
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./client/build

  deploy-backend:
    needs: [test, e2e]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'
